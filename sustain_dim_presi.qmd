---
title: "Dashboard-Prototyp"
subtitle: "kurzer √úberblick und Ausblick"
format: 
  revealjs:
    chalkboard: 
      buttons: true
      boardmarker-width: 1
editor: visual
---

## Inhalt

1.  Unsere Vision

2.  Die Umsetzung

3.  Die Daten"magie"

4.  What's next?

## 1. Die Vision

Lerndashboard mit verschiedenen Elementen:

-   Problemstellung
-   Theorie
-   Interaktive Apps
-   Programmieraufgaben

![](Vision1.png)

## 1. Die Vision {auto-animate="true" auto-animate-easing="ease-in-out"}

Lerndashboard mit verschiedenen Elementen:

![](Vision2.png)

## 1. Die Vision {auto-animate="true" auto-animate-easing="ease-in-out"}

Lerndashboard mit verschiedenen Elementen:

![](Vision3.png)

## 1. Die Vision {auto-animate="true" auto-animate-easing="ease-in-out"}

Lerndashboard mit verschiedenen Elementen:

![](Vision4.png)

## 1. Die Vision -\> Die Datenseite

-   Interaktionen I: Testergebnisse

![](tabelle.png)

## 1. Die Vision -\> Die Datenseite

-   Interaktionen II: Klicks, Scrolls, ...

![](cursor.png)

## 1. Die Vision -\> Die Datenseite

-   User Zuordnung notwendig

![](login.png)

## 2. Die Umsetzung

-   R shiny, R Markdown --\> Aussehen, Content
-   Shiny Server --\> Host
-   Mousetrack (JavaScript) --\> Track Interactions

::: {style="text-align: center; margin-top: 1em"}
[Prototyp Lerndashboard](http://learning-dashboard.lehre.hwr-berlin.de:3838/MultiLA/){preview-link="true" style="text-align: center"}
:::

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten1.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten2.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten3.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten4.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten41.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten5.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten6.png)

## 2. Die Umsetzung {auto-animate="true" auto-animate-easing="ease-in-out"}

![](Zutaten7.png)

## 3. Die Daten"magie" {auto-animate="true" auto-animate-easing="ease-in-out"}

-   State in Quizzen festhalten und in eine Tabelle schreiben:

``` {.r code-line-numbers="3|13"}
observeEvent(input[[paste0("quiz_submit",q_nr)]], {
    isolate({
      r_quiz[[paste0("quiz_",q_nr)]]  <-
        { if (is_empty(input[[paste0("quiz_mc",q_nr)]])) {
          "<br />suche eine Option aus und gehe auf Submit"
        } else if (input[[paste0("quiz_mc",q_nr)]] == correct) {
          quiz_out(q_nr, "green", "correct", correct, answer,user)
        } else {
          quiz_out(q_nr, "red", "incorrect", correct, answer,user)
        }
        }
       if(!is_empty(input[[paste0("quiz_mc",q_nr)]]))
        r_state[[paste0("quiz_mc",q_nr)]] <<- input[[paste0("quiz_mc",q_nr)]]
    })
})
```

## 3. Die Daten"magie" {auto-animate="true" auto-animate-easing="ease-in-out" chalkboard-buttons="true"}

-   State in Quizzen festhalten und in eine Tabelle schreiben:

"quiz_mc2.1";"(N(30;0,1))";"(N(30;5))";"no";"multila";"2023-01-06 04:12:17"

## 3. Die Daten"magie" {auto-animate="true" auto-animate-easing="ease-in-out"}

-   Kursor-Bewegungen in access.log festhalten:

``` {.js code-line-numbers="7|16"}
MouseTrack.moveListener = function (evt) {
    if( MouseTrack.vars.srvr != null ) {
        var time = MouseTrack.getPreciseTimestamp();

    //...//

        var movement_output = {
            type: 'mouse_movement',
            x_pos: x,
            y_pos: y,
            w_scr: w,
            h_scr: h,
            timestamp: time,
            src_url: src
        };
        MouseTrack.vars.ping.src = MouseTrack.vars.srvr+'/1x1.gif?move_x='+x+'&y='+y+'&w='+w+'&h='+h+'&src='+src + tabs+'&sesId'+sesId+'&zoom' +browserZoomLevel;

    }
};
```

## 3. Die Daten"magie" {auto-animate="true" auto-animate-easing="ease-in-out"}

-   Kursor-Bewegungen in access.log festhalten:

"GET /mousetrack/1x1.gif?<mark>move_x=497</mark>&<mark>y=162</mark>&w=1920&h=942&...&<mark>tab:problem</mark>&<mark>sesIdmultila</mark>..."

## 4. What's next?

::: columns
::: {.column width="50%"}
Pros:

-   Es funktioniert! üòé üëç

-   Incremental structure üóÇ

-   Flexibler Auf- und Ausbau üõ†

-   ...
:::

::: {.column width="50%"}
Cons:

-   Login nicht optimal üëª

-   Datenchaos ü§Ø

-   nicht erfasste Interaktionen

-   ...
:::
:::

## 4. What's next?

-   nur eine M√∂glichkeit der Umsetzung
-   Interaktionen --\> Datenbank
-   Template f√ºr weitere Inhalte
-   ...

## 4. What's next?

![](letsdoit.gif)
